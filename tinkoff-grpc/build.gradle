import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id "org.openapi.generator"
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java'
}

group = 'ru.tinkoff.grpc'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

dependencies {
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
    implementation 'io.swagger.parser.v3:swagger-parser:2.0.29'

    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.7.3'

    // db
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.postgresql:postgresql'

    // tinkoff grpc lib
    implementation 'ru.tinkoff.piapi:java-sdk-core:1.5'
    implementation 'io.grpc:grpc-api:1.43.0'
    implementation 'io.netty:netty-transport-native-epoll:4.1.113.Final'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // telegram
    implementation 'com.github.pengrad:java-telegram-bot-api:7.0.0'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

test {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDir("$buildDir/generated/src/gen/java")
            srcDir("$buildDir/generated/src/main/java")
        }
    }
}

file("$rootDir/openapi/specs").listFiles().each {
    def apiName = it.getName().replace(".yml", "")
    def taskk = tasks.create("openApiGenerate_" + apiName, GenerateTask.class) {
        generatorName.set("spring")
        inputSpec.set("$rootDir/openapi/specs/" + "${apiName}.yml")
        outputDir.set("$buildDir/generated")
        apiPackage.set("ru.tinkoff.adapter.client.${apiName}.api")
        modelPackage.set("ru.tinkoff.adapter.client.${apiName}.payload")
        templateDir.set("$rootDir/openapi/templates/feign")
        library.set("spring-cloud")
        configOptions = [
                "useSpringBoot3": "true",
                "dateLibrary"   : "java8",
                "configPackage" : "ru.tinkoff.adapter.client.${apiName}.config"
        ]
        additionalProperties = [
                "serviceName": apiName
        ]
    }
    compileJava.dependsOn taskk
}