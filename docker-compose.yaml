version: '3.5'
services:

  postgres1:
    container_name: postgres_tinkoff_grpc
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /data/postgres
    networks:
      - my_network
    ports:
      - 25017:5432
    volumes:
      - postgres:/data/postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

#  tinkoff-adapter:
#    container_name: tinkoff_grpc
#    build:
#      context: .
#    depends_on:
#      - postgres1
#    restart: always
#    environment:
#      APP_PORT: ${APP_PORT}
#      DB_HOST: ${DB_HOST}
#      DB_PORT: ${DB_PORT}
#      DB_NAME: ${DB_NAME}
#      DB_USERNAME: ${DB_USERNAME}
#      DB_PASSWORD: ${DB_PASSWORD}
#      JVM_OPTS: >
#        -XX:+CrashOnOutOfMemoryError
#    networks:
#      - my_network
#    ports:
#      - 25224:8080
#    deploy:
#      resources:
#        limits:
#          cpus: '0.5'
#          memory: 300M

volumes:
  postgres:

networks:
  my_network: